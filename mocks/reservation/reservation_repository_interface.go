// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/eibrahimarisoy/car_rental/internal/reservation (interfaces: ReservationRepositoryInterface)

// Package reservation is a generated GoMock package.
package reservation

import (
	reflect "reflect"

	models "github.com/eibrahimarisoy/car_rental/internal/models"
	pagination "github.com/eibrahimarisoy/car_rental/pkg/pagination"
	gomock "github.com/golang/mock/gomock"
)

// MockReservationRepositoryInterface is a mock of ReservationRepositoryInterface interface.
type MockReservationRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockReservationRepositoryInterfaceMockRecorder
}

// MockReservationRepositoryInterfaceMockRecorder is the mock recorder for MockReservationRepositoryInterface.
type MockReservationRepositoryInterfaceMockRecorder struct {
	mock *MockReservationRepositoryInterface
}

// NewMockReservationRepositoryInterface creates a new mock instance.
func NewMockReservationRepositoryInterface(ctrl *gomock.Controller) *MockReservationRepositoryInterface {
	mock := &MockReservationRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockReservationRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReservationRepositoryInterface) EXPECT() *MockReservationRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateReservation mocks base method.
func (m *MockReservationRepositoryInterface) CreateReservation(arg0 *models.Reservation) (*models.Reservation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateReservation", arg0)
	ret0, _ := ret[0].(*models.Reservation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateReservation indicates an expected call of CreateReservation.
func (mr *MockReservationRepositoryInterfaceMockRecorder) CreateReservation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateReservation", reflect.TypeOf((*MockReservationRepositoryInterface)(nil).CreateReservation), arg0)
}

// GetReservations mocks base method.
func (m *MockReservationRepositoryInterface) GetReservations(arg0 *pagination.Pagination) (*[]models.Reservation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReservations", arg0)
	ret0, _ := ret[0].(*[]models.Reservation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReservations indicates an expected call of GetReservations.
func (mr *MockReservationRepositoryInterfaceMockRecorder) GetReservations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReservations", reflect.TypeOf((*MockReservationRepositoryInterface)(nil).GetReservations), arg0)
}
