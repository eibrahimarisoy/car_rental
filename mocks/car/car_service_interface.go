// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/eibrahimarisoy/car_rental/internal/car (interfaces: CarServiceInterface)

// Package car is a generated GoMock package.
package car

import (
	reflect "reflect"

	models "github.com/eibrahimarisoy/car_rental/internal/models"
	filters "github.com/eibrahimarisoy/car_rental/pkg/filters"
	pagination "github.com/eibrahimarisoy/car_rental/pkg/pagination"
	gomock "github.com/golang/mock/gomock"
)

// MockCarServiceInterface is a mock of CarServiceInterface interface.
type MockCarServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCarServiceInterfaceMockRecorder
}

// MockCarServiceInterfaceMockRecorder is the mock recorder for MockCarServiceInterface.
type MockCarServiceInterfaceMockRecorder struct {
	mock *MockCarServiceInterface
}

// NewMockCarServiceInterface creates a new mock instance.
func NewMockCarServiceInterface(ctrl *gomock.Controller) *MockCarServiceInterface {
	mock := &MockCarServiceInterface{ctrl: ctrl}
	mock.recorder = &MockCarServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCarServiceInterface) EXPECT() *MockCarServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateCar mocks base method.
func (m *MockCarServiceInterface) CreateCar(arg0 *models.Car) (*models.Car, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCar", arg0)
	ret0, _ := ret[0].(*models.Car)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateCar indicates an expected call of CreateCar.
func (mr *MockCarServiceInterfaceMockRecorder) CreateCar(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCar", reflect.TypeOf((*MockCarServiceInterface)(nil).CreateCar), arg0)
}

// GetCars mocks base method.
func (m *MockCarServiceInterface) GetCars(arg0 *pagination.Pagination, arg1 *filters.CarFilter) (*[]models.Car, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCars", arg0, arg1)
	ret0, _ := ret[0].(*[]models.Car)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCars indicates an expected call of GetCars.
func (mr *MockCarServiceInterfaceMockRecorder) GetCars(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCars", reflect.TypeOf((*MockCarServiceInterface)(nil).GetCars), arg0, arg1)
}
